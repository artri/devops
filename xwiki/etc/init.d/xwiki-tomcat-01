#!/bin/bash

#
# /etc/init.d/xwiki-tomcat -- startup script for the xwiki Tomcat servlet engine
#

### BEGIN INIT INFO
# Provides:             xwiki-tomcat
# Required-Start:       $local_fs $remote_fs $network
# Required-Stop:        $local_fs $remote_fs $network
# Should-Start:         $named
# Should-Stop:          $named
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    xwiki Apache Tomcat init script
# Description:          Manage Tomcat container for xwiki instance with OpenRC
### END INIT INFO

set -e

SERVICE_NAME="$(basename "$0")"
PIDFILE="/var/run/$SERVICE_NAME.pid"

#CATALINA_HOME is the location of the bin files of Tomcat  
CATALINA_HOME="/home/xwiki/tomcat"
#CATALINA_BASE is the location of the configuration files of this instance of Tomcat
CATALINA_BASE="/home/xwiki/tomcat"
CATALINA_CMD="$CATALINA_HOME/bin/catalina.sh"

#TOMCAT_USER is the default user of tomcat
TOMCAT_USER=xwiki
TOMCAT_GROUP=xwiki
#TOMCAT_USAGE is the message if this script is called without any options
TOMCAT_USAGE="Usage: $0 {\e[00;32mstart\e[00m|\e[00;31mstop\e[00m|\e[00;31mkill\e[00m|\e[00;32mstatus\e[00m|\e[00;31mrestart\e[00m}"

#SHUTDOWN_WAIT is wait time in seconds for java proccess to stop
SHUTDOWN_WAIT=20

# check script is started with root priviledges
if [ `id -u` -ne 0 ]; then
	echo -e "\e[00;31mYou need root privileges to run this script. Exiting\e[00m"
	exit 1
fi

# check whether TOMCAT_USER exists
if [ ! `id -u $TOMCAT_USER >/dev/null 2>&1` ]; then
	echo -e "\e[00;31mTomcat user $TOMCAT_USER does not exists. Exiting\e[00m"
	exit 1
fi

# check whether CATALINA_CMD is set properly
if [ ! -x "$CATALINA_CMD" ]; then
    echo -e "\e[00;31mService manager does not exists or is not executable. Exiting\e[00m"
    exit 1
fi

# read configuration variable file if it is present
[ -r /etc/default/$SERVICE_NAME ] && . /etc/default/$SERVICE_NAME

# load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions


#
# look for running PID of the tomcat service
#
tomcat_pid() {
        echo `ps -fe | grep $CATALINA_BASE | grep -v grep | tr -s " "|cut -d" " -f2`
}

#
# Start tomcat daemon/service
#
start() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]; then
    echo -e "\e[00;31mTomcat is already running (pid: $pid)\e[00m"
  else
    [ -r $PIDFILE ] && rm -f $PIDFILE
    # Start tomcat
    echo -e "\e[00;32mStarting tomcat\e[00m"
	start-stop-daemon --start --chuid $TOMCAT_USER:$TOMCAT_GROUP --pidfile $PIDFILE --exec "$CATALINA_CMD start"
    status
  fi
  return 0
}

#
#
#
status(){
  pid=$(tomcat_pid)
  if [ -n "$pid" ]; then 
    echo -e "\e[00;32mTomcat is running with pid: $pid\e[00m"
  else
    echo -e "\e[00;31mTomcat is not running\e[00m"
    return 3
  fi
}

#
#
#
stop() {
  pid=$(tomcat_pid)
  if [ -n "$pid" ]; then
    echo -e "\e[00;31mStoping Tomcat\e[00m"
    start-stop-daemon --start --background --chuid $TOMCAT_USER:$TOMCAT_GROUP --make-pidfile --pidfile $PIDFILE --exec "$CATALINA_CMD stop"
 
    let kwait=$SHUTDOWN_WAIT
    count=0;
    until [ `ps -p $pid | grep -c $pid` = '0' ] || [ $count -gt $kwait ]
    do
      echo -n -e "\n\e[00;31mwaiting for processes to exit\e[00m";
      sleep 1
      let count=$count+1;
    done
 
    if [ $count -gt $kwait ]; then
      echo -n -e "\n\e[00;31mkilling processes didn't stop after $SHUTDOWN_WAIT seconds\e[00m"
      terminate
    fi
    
    #TODO: rm -f $PIDFILE
  else
    echo -e "\e[00;31mTomcat is not running\e[00m"
  fi
 
  return 0
}

case $1 in
	start)
	  start
	;;
	stop)  
	  stop
	;;
	restart)
	  stop
	  start
	;;
	status)
		status
		exit $?  
	;;
	kill)
		terminate
	;;		
	*)
		echo -e $TOMCAT_USAGE
	;;
esac    
exit 0

